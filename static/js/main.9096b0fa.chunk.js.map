{"version":3,"sources":["components/styled-components.js","containers/home.js","containers/template.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","MainTitle","p","Row","Column","Cards","Box","BoxHeading","Input","input","Button","button","props","block","CrossBtn","LinkBtn","Link","Home","useState","templates","setTemplates","useEffect","temp","localStorage","getItem","JSON","parse","row_render","map","item","i","temp_render","j","key","onClick","arr","forEach","t","index","push","setItem","stringify","_delete","name","to","id","style","flex","flexDirection","height","Template","existing_id","useParams","template_name","setName","template_id","setId","setTemplate","editor","setEditor","history","useHistory","justifyContent","marginLeft","float","placeholder","value","onChange","e","target","display","exportHtml","data","design","html","old_templates","editing","alert","marginTop","onLoad","t_id","undefined","parseInt","window","unlayer","loadDesign","Date","getTime","_loadDesign","ref","App","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9096b0fa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {   \r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\npadding:32px;\r\nbackground:#fff;\r\ntext-align:center`;\r\nconst MainTitle = styled.p`\r\nmargin:0px;\r\npadding:0px;\r\ntext-align:left;\r\nmargin-left:12px;\r\nfont-size:1.5rem;\r\nfont-family:Calibri`; \r\nconst Row = styled.div`\r\ndisplay:flex;\r\nflex-direction:row;\r\nflex:1;width:100%`;\r\nconst Column = styled.div`\r\ndisplay:flex;\r\nflex-direction:column`;\r\nconst Cards = styled.div`\r\nwidth:25%;\r\nheight:150px;\r\nmin-height:150px;  \r\npadding:10px;\r\ndisplay:inline;\r\nbox-sizing: border-box;\r\n`;\r\nconst Box = styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    background:#03A9F4;\r\n    border-radius:2px;\r\n    box-shadow:0px 0px 8px #B3E5FC;\r\n    height:100%;\r\n    `;\r\n    const BoxHeading = styled.p`\r\n    color:#FFFFFF;\r\n    font-weight:400;\r\n    font-size:1.2rem;\r\n    padding-top:12px;\r\n    font-family:Calibri;\r\n    flex:1\r\n    `;\r\n    const Input = styled.input`\r\n    border-color:#03A9F4;\r\n    font-family:Calibri;\r\n    padding:2px;\r\n    `;\r\n    const Button = styled.button`\r\n    background:#FFC107;\r\n    padding:2px;\r\n    min-width:100px;\r\n    margin:4px;\r\n    font-size:0.9rem;\r\n    justify-content:center;\r\n    font-weight:600;\r\n    font-family:Calibri;\r\n    color:#666;\r\n    flex:${props=>props.block?1:0}\r\n    `\r\n    const CrossBtn = styled.button`\r\n    position:absolute;\r\n    top:-12px;\r\n    right:-12px;\r\n    border-radius:16px;\r\n    width:32px;\r\n    height:32px;\r\n    background:#D32F2F;\r\n    color:#fff;\r\n    font-size:18px;\r\n    font-family:Calibri;\r\n    font-weight:400;\r\n    border:0\r\n    \r\n    `;\r\n    const LinkBtn = styled(Link)`\r\n    color:#666;\r\n    padding:2;\r\n    font-size:0.9rem;\r\n    flex:1;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-weight:600;\r\n    text-decoration:none;\r\n    font-family:Calibri`;\r\n\r\n  \r\nexport {\r\n    Container,\r\n    MainTitle,\r\n    Column,\r\n    Row,\r\n    Cards,\r\n    Box,\r\n    BoxHeading,\r\n    Input,\r\n    Button,\r\n    CrossBtn,\r\n    LinkBtn,\r\n}","import React, { useState,useEffect } from 'react';\r\nimport { \r\n  MainTitle,\r\n  Cards,\r\n  Box,\r\n  BoxHeading,\r\n  Button,\r\n  CrossBtn,\r\n  Column,\r\n  Row,\r\n  LinkBtn} from '../components/styled-components';\r\nexport default function Home(){\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [templates,setTemplates] = useState([]);\r\n  useEffect(()=>{\r\n    let temp = localStorage.getItem(\"templates\");\r\n    if(temp !== null){\r\n      setTemplates(JSON.parse(temp))\r\n    }\r\n  },[])\r\n  \r\n    function _delete(i){\r\n      let temp = localStorage.getItem(\"templates\");\r\n      if(temp !== null){\r\n        let arr = []\r\n        temp = JSON.parse(temp);\r\n        temp.forEach((t,index)=>{\r\n          if(i!== index)\r\n          {\r\n            arr.push(t);\r\n          }\r\n        })\r\n        localStorage.setItem('templates',JSON.stringify(arr));\r\n        setTemplates(arr);\r\n      }\r\n    }\r\n   \r\n    \r\n    const row_render = templates.map((item,i)=>{\r\n      const temp_render = templates.map((item,j)=>{\r\n        if(j>=i && j<(i+4))\r\n        return(\r\n          <Cards key={j}>\r\n            <Box >\r\n            <CrossBtn onClick={()=>{_delete(j)}}>X</CrossBtn>\r\n            <BoxHeading>{item.name}</BoxHeading>\r\n            <Button><LinkBtn to={\"/edit/\"+item.id} >Edit</LinkBtn></Button>\r\n            </Box>\r\n          </Cards>\r\n          )\r\n       })\r\n      if(i%4===0 || i === 0){\r\n     \r\n        return(\r\n          <Row key={i} >{temp_render}</Row>\r\n          \r\n        )\r\n     }\r\n     \r\n    }) \r\n    return (\r\n      <div>\r\n          <Row>\r\n              <div style={{flex:1,flexDirection:\"row\",}}>\r\n                  <MainTitle>Templates</MainTitle>\r\n              </div>\r\n              <Button >\r\n                <LinkBtn to=\"/new\" >New Template</LinkBtn>\r\n              </Button>\r\n          </Row>\r\n          <div style={{flex:1,height:'85vh'}}>\r\n            <Column >\r\n              {row_render}\r\n\r\n            </Column>\r\n          </div>\r\n      </div>\r\n    );\r\n  \r\n \r\n}","import React, { useState } from 'react';\r\nimport EmailEditor from 'react-email-editor';\r\nimport { \r\n  useHistory,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {Input,Button,Row, LinkBtn} from '../components/styled-components';\r\nexport default function Template(){\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const {existing_id} = useParams();\r\n  const [template_name,setName] = useState(\"\");\r\n  const [template_id,setId] = useState(existing_id);\r\n  const [template,setTemplate] = useState(null);\r\n  const [editor,setEditor] = useState(null);\r\n  const history = useHistory();\r\n \r\n  function save(){\r\n       if(template_name === \"\")\r\n    {\r\n      alert(\"Please type template name to proceed!!\");\r\n      return;\r\n    }\r\n    editor.exportHtml(data => {\r\n      const { design, html } = data\r\n     \r\n      let old_templates = localStorage.getItem(\"templates\");\r\n      if(old_templates === null){\r\n        let arr = [];\r\n        arr.push({id:template_id,name:template_name,design,html});\r\n        localStorage.setItem(\"templates\",JSON.stringify(arr));\r\n\r\n      }\r\n      else{\r\n\r\n        old_templates = JSON.parse(old_templates) ;\r\n        let editing = false;\r\n        old_templates.forEach((t)=>{\r\n          if(t.id === template_id){\r\n            editing = true;\r\n            t.name = template_name;\r\n            t.design = design;\r\n            t.html = html;\r\n          }\r\n        })\r\n        if(!editing){\r\n          old_templates.push({id:template_id,name:template_name,design,html});\r\n        }\r\n        localStorage.setItem(\"templates\",JSON.stringify(old_templates));\r\n       \r\n      }\r\n      history.push('/');\r\n\r\n\r\n\r\n\r\n\r\n    })\r\n  }\r\n function _loadDesign(){\r\n      let t_id = existing_id ;\r\n      if(t_id !== undefined){\r\n\r\n       let templates = localStorage.getItem(\"templates\");\r\n       if(templates !== null){\r\n\r\n         templates = JSON.parse(templates);\r\n \r\n         templates.forEach((t)=>{\r\n           if(parseInt(t.id) === parseInt(t_id)){\r\n\r\n             setName(t.name);\r\n             setId(t.id);\r\n             setTemplate(t);\r\n                         \r\n             window.unlayer.loadDesign(t.design);\r\n                           \r\n           }\r\n         })\r\n       }\r\n     }\r\n     else{\r\n      t_id = parseInt(new Date().getTime()/1000);\r\n       setId(t_id)\r\n     }\r\n    \r\n  }\r\n  \r\n    return (\r\n      <div>\r\n        <Row>\r\n          <div style={{flex:1,flexDirection:\"row\",justifyContent:\"flex-start\",marginLeft:20}}>\r\n            <Input style={{float:\"left\"}} placeholder={\"Template Name\"} value={template_name} onChange={(e)=>{setName(e.target.value)}}/>\r\n          </div>\r\n          <div style={{display:'flex',flex:1,justifyContent:\"flex-end\"}}>\r\n            <Button onClick={()=>{save()}}>Save Template</Button>\r\n            <Button ><LinkBtn to=\"/\">Go Back</LinkBtn></Button>\r\n          </div>\r\n        </Row>    \r\n        <div style={{marginTop:16}}>\r\n          <EmailEditor  onLoad={()=>{_loadDesign()}} ref={editor=> setEditor(editor)}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n \r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Home from './containers/home.js';\nimport Template from './containers/template.js';\nimport {Container} from './components/styled-components';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nfunction App() {\n \n    return (\n      <Container>\n        <Router>\n          <Switch>\n          <Route path=\"/edit/:existing_id\">\n              <Template />\n            </Route>\n          <Route path=\"/new\">\n              <Template  />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n  \n        </Router>\n      </Container>\n    );\n  \n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}